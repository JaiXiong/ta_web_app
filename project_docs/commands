1) help
	1) prints all available commands for permission level of current user
	2) prompts user "Please login"

2) login <username> <password>
	1) If the user exists and the password matches, that user is recognized as the current
		user and the response is "Logged in as <username>."
	2) Otherwise the response is "Login failed. "Login failed. Invalid username or password" and no change to
		the current user is made.
3) logout
	1) current user is set to none
	2) returns "<username> has been logged out."


4) create_course <name> <section> <days_of_week> <times> (<lab sections>)
	1. Creates a course with given arguments.
	2. If any arguments are missing or invalid the course is not created and response is
		is "Please input valid arguments for all fields to create a course"
	3. If course already exists the course is not made and the response is "Course already
		exists in the data base."

5) create_account <username> <password> <role>
	1) Creates a new user with the given username if no such user currently exists,
		and response is "User <username> has been added."
	2) If that user already exists it is not added
		and response is "<username> already exists."
	3) If calling user has insufficient permissions to create account or account with
		supplied role, no account is created and a message is displayed to user.

6) delete_account <username>
	1) The account for the given username is deleted and the response "<username> has
		been removed." is given.
	2) If given username is assigned to a course user is not deleted response "<username>
		is assigned to a course and can not be deleted" is given.
	5) If the user does not exist the response is "<username> does not exist"

7) edit_account <username>
	1) If given username does not exist the reponse is "<username> does not exist>" is given
	2) If current user does not have permissions to edit account given response "You do not have
		permissions to edit this account" is given.
	3) a list of available fields to be edited based on current user's permissions will be displayed
		and the user will be promoted with "Please specify what field you would like to change
		and its new value?".
	4) If the new value is of the wrong type then a response "That is not a valid value for <field>"
	5) If the input for field is not one selected then a response "That is not a valid field"

8) send_notification <username>
    1) //to be determined

9) assign_instructor <username> <course>
    1) If instructor is not already assigned to a course at the given course's time the instructor
		is added to the course and the response "<username> has been added to <coursename>"
		is given.
    2) If the instructor is already assigned to a course at the time of the given course the response
		"<username> has an timing conflict with this assignment" is given.
	3) If the current user does not have permissions to assign instructors to courses the response
		"You do not have permissions to assign instructors to courses" is given.

10) assign_ta_to_course <username> <course>
	1) If ta is not already assigned to a course at the given course's time the ta
		is added to the course and the response "<username> has been added to <coursename>"
		is given.
	2) If the ta is already assigned to a course at the time of the given course the response
		"<username> is already assigned to a course" is given.
	3) If the current user does not have permissions to assign tas to courses the response
		"You do not have permissions to assign TAs to courses" is given.

11) assign_ta_to_lab <username> <course> <labsection>
	1) If ta is not already assigned to a course or section at the given section's time the ta
		is added to the course and the response "<username> has been added to <labsection>"
		is given.
	2) If the ta is already assigned to a section at the time of the given course the response
		"<username> has a timing conflict with this assignment" is given.
	3) If the current user does not have permissions to assign tas to sections the response
		"You do not have permissions to assign TAs to lab sections" is given.

12) access_system_data
    1) //to be determined

13) edit_contact_info
    1) Returns current user's "<username> <phonenumber> <email> <address>" and prompts
    	the user "Enter the field would you like to change and its new value"
    2) If the given field is not valid the response "That is not a valid field" is given
    3) If the given value for the field is not valid the response "<value> is not a valid
    	input for <field>"

14) view_ta_assignments
    1. returns a list of all the TA assignments

15) view_course_assignments
	1. return a list of courses assignment to the current user
	2. If calling user does not have permissions response is "Insufficient permissions"

16) read_contact_info
	1. Prints public contact information for all users.
